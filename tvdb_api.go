package main

import(
	"fmt"
	"encoding/json"
	"bytes"
	"net/http"
)

func main(){
	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

	type Payload struct {
		Apikey string `json:"apikey"`
	}

	data := Payload{
		Apikey: "xx",
	}

	payloadBytes, err := json.Marshal(data)
	if err != nil {
		fmt.Print("JSON machine broke")
	}
	body := bytes.NewReader(payloadBytes)

	req, err := http.NewRequest("POST", "https://api.thetvdb.com/login", body)
	if err != nil {
		fmt.Println("HTTP machine broke")
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Accept", "application/json")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		fmt.Println("http broke again")
	}
	fmt.Println(resp)
	defer resp.Body.Close()

	body, err := ioutil.Readall(resp.Body) //resp body is a ioutil interface
	if err != nil {
		log.Panicln(err)
	}

	req2, err := http.NewRequest("GET", "https://api.thetvdb.com/search/series?name=mr%20robot", body)
	if err != nil {
		fmt.Println("HTTP machine broke")
	}
	req2.Header.Set("Content-Type", "application/json")
	req2.Header.Set("Accept", "application/json")
	resp2, err := http.DefaultClient.Do(req)
	if err != nil {
		fmt.Println("http broke again")
	}
	fmt.Println(resp2)
	defer resp.Body.Close()
}
